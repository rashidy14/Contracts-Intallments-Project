CREATE  OR REPLACE TRIGGER INSTALLMENT_AUTOFILL_TRG
AFTER   UPDATE OF PAYMENT_INSTALLMENT_NO
 ON CONTRACTS
FOR EACH ROW

DECLARE
V_MONTHS_COUNT NUMBER(6);
V_MONEY NUMBER(8,2);
V_NEXT_DATE DATE;
V_NOTES VARCHAR2(1000);

CURSOR EXISTED_CONTRACTS IS 
SELECT CONTRACT_ID 
FROM INSTALLMENT_PAID;

BEGIN

FOR REC_CONTRACT_ID  IN EXISTED_CONTRACTS LOOP

IF ( REC_CONTRACT_ID.CONTRACT_ID = :NEW.CONTRACT_ID )
THEN 

DELETE FROM INSTALLMENT_PAID
WHERE CONTRACT_ID = REC_CONTRACT_ID.CONTRACT_ID;

UPDATE CLIENTS SET CLIENT_NOTES = ''
WHERE CLIENT_ID = :NEW.CLIENT_ID;


END IF;

END LOOP;

V_MONTHS_COUNT := PAYMENT_NUMBER (:NEW.CONTRACT_ENDDATE  , :NEW.CONTRACT_STARTDATE , :NEW.CONTRACT_PAYMENT_TYPE);
V_MONEY := INSTALLMENTS_AMOUNT (:NEW.CONTRACT_TOTAL_FEES  , :NEW.CONTRACT_DEPOSIT_FEES ,V_MONTHS_COUNT ,:NEW.CONTRACT_PAYMENT_TYPE);
V_NEXT_DATE := :NEW.CONTRACT_STARTDATE;

--TO UPDATE CLINED NOTES
SELECT CLIENT_NOTES  INTO V_NOTES 
FROM CLIENTS
WHERE CLIENT_ID = :NEW.CLIENT_ID;

FOR I IN 1..V_MONTHS_COUNT LOOP

INSERT INTO INSTALLMENT_PAID 
(CONTRACT_ID, INSTALLMENT_DATE, INSTALLMENT_AMOUNT)
VALUES(:NEW.CONTRACT_ID,V_NEXT_DATE, V_MONEY);

V_NEXT_DATE := NEXT_INSTALLMENT_DATE(:NEW.CONTRACT_PAYMENT_TYPE  , V_NEXT_DATE);

END LOOP;

IF (V_NOTES = NULL)
THEN

UPDATE CLIENTS SET CLIENT_NOTES = 'AMOUNT OF PAYMENT:  ' || V_MONEY || ' PAID FOR ' || V_MONTHS_COUNT || ' TIMES  FOR CONTRACT ID ' || :NEW.CONTRACT_ID
WHERE CLIENT_ID = :NEW.CLIENT_ID;

ELSE

UPDATE CLIENTS SET CLIENT_NOTES = V_NOTES||' / '|| 'AMOUNT OF PAYMENT:  ' || V_MONEY || ' PAID FOR ' || V_MONTHS_COUNT || ' TIMES  FOR CONTRACT ID ' || :NEW.CONTRACT_ID
WHERE CLIENT_ID = :NEW.CLIENT_ID;

END IF;

END;



